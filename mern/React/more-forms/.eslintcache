[{"C:\\Users\\nouff\\Desktop\\Nouf-Alotaibi\\mern\\React\\more-forms\\src\\index.js":"1","C:\\Users\\nouff\\Desktop\\Nouf-Alotaibi\\mern\\React\\more-forms\\src\\components\\HookForm.jsx":"2","C:\\Users\\nouff\\Desktop\\Nouf-Alotaibi\\mern\\React\\more-forms\\src\\components\\HookCard.jsx":"3"},{"size":500,"mtime":1606293730377,"results":"4","hashOfConfig":"5"},{"size":5666,"mtime":1606334232488,"results":"6","hashOfConfig":"5"},{"size":863,"mtime":1606321794818,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ahmq3l",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nouff\\Desktop\\Nouf-Alotaibi\\mern\\React\\more-forms\\src\\index.js",[],"C:\\Users\\nouff\\Desktop\\Nouf-Alotaibi\\mern\\React\\more-forms\\src\\components\\HookForm.jsx",["15"],"import React, { useState } from 'react';\r\nconst HookForm = (props) => {\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [c_password, setC_password] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const createUser = (e) => {\r\n        e.preventDefault();\r\n        const newUser = { firstname, lastname, email, password, c_password }\r\n        console.log(\"Welcome\", newUser);\r\n        props.setInputs(newUser);\r\n        // for making the values inside the inputs disappears.\r\n        setFirstname('');\r\n        setLastname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setC_password('');\r\n    }\r\n\r\n    const handleFirstname = (e) => {\r\n        setFirstname(e.target.value);\r\n        let message = \"\";\r\n        if (e.target.value.length < 2 && e.target.value.length > 0) {\r\n            message = \" First name must be at least 2 characters.\";\r\n        } \r\n        // else if (e.target.value.length === 0) {\r\n        //     message = \"First name is required\";\r\n        // }\r\n        setErrors({ ...errors, firstname: message });\r\n    }\r\n\r\n    const handleLastname = (e) => {\r\n        setLastname(e.target.value);\r\n        let message = \"\";\r\n        if (e.target.value.length < 2 && e.target.value.length > 0) {\r\n            message = \" Last name must be at least 2 characters.\";\r\n        } \r\n        // else if (e.target.value.length === 0) {\r\n        //     message = \"Last name is required\";\r\n        // }\r\n        // setErrors({ ...errors, lastname: message });\r\n\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n        let message = \"\";\r\n        if (e.target.value.length < 5 && e.target.value.length > 0) {\r\n            message = \" Email must be at least 5 characters.\";\r\n        } \r\n        // else if (e.target.value.length === 0) {\r\n        //     message = \"Email is required\";\r\n        // }\r\n        setErrors({ ...errors, email: message });\r\n\r\n    }\r\n\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value);\r\n        let message = \"\";\r\n        if (e.target.value.length < 8 && e.target.value.length > 0) {\r\n            message = \"Password should be at least 8 characters\";\r\n        } \r\n        // else if (e.target.value.length === 0) {\r\n        //     message = \"Password is required\";\r\n        // } \r\n        else if (e.target.value !== c_password) {\r\n            message = \"Password and confirm password do not match\";\r\n        }\r\n        setErrors({ ...errors, password: message });\r\n    }\r\n\r\n    const handleC_password = (e) => {\r\n        setC_password(e.target.value);\r\n        let message = \"\";\r\n        if (e.target.value.length < 8 && e.target.value.length > 0) {\r\n            message = \"Confirm Password should be at least 8 characters\";\r\n        } \r\n        // else if (e.target.value.length === 0) {\r\n        //     message = \"Confirm Password is required\";\r\n        // } \r\n        else if (e.target.value !== password) {\r\n            message = \"Password and confirm password do not match\";\r\n        }\r\n        setErrors({ ...errors, c_password: message });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"form mt-5\">\r\n            <form onSubmit={createUser}>\r\n                <div className=\"form-row\">\r\n                    <label htmlFor=\"\">First Name</label>\r\n                    <input className=\"form-control\" type=\"text\" onChange={e => setFirstname(e.target.value)} value={firstname} onBlur={handleFirstname} />\r\n                    <p style={{ color: 'red' }}>{errors.firstname}</p>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <label htmlFor=\"\">Last Name</label>\r\n                    <input className=\"form-control\" type=\"text\" onChange={e => setLastname(e.target.value)} value={lastname} onBlur={handleLastname} />\r\n                    <p style={{ color: 'red' }}>{errors.lastname}</p>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <label htmlFor=\"\">Email</label>\r\n                    <input className=\"form-control\" type=\"text\" onChange={e => setEmail(e.target.value)} value={email} onBlur={handleEmail} />\r\n                    <p style={{ color: 'red' }}>{errors.email}</p>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <label htmlFor=\"\">Password</label>\r\n                    <input className=\"form-control\" type=\"text\" onChange={e => setPassword(e.target.value)} value={password} onBlur={handlePassword} />\r\n                    <p style={{ color: 'red' }}>{errors.password}</p>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <label htmlFor=\"\">Confirm Password</label>\r\n                    <input className=\"form-control\" type=\"text\" onChange={e => setC_password(e.target.value)} value={c_password} onBlur={handleC_password} />\r\n                    <p style={{ color: 'red' }}>{errors.c_password}</p>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                {\r\n                    firstname.length >2 && lastname.length>2 && email.length>5 && password.length>8 && c_password.length>8 && c_password === password?\r\n                    <input type=\"submit\" className=\"form-control  btn btn-outline-warning\" value=\"Submit\" />:\r\n                    <input type=\"submit\" className=\"form-control  btn btn-outline-warning\" value=\"Submit\" disabled />\r\n                }\r\n                </div>\r\n\r\n                \r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default HookForm;","C:\\Users\\nouff\\Desktop\\Nouf-Alotaibi\\mern\\React\\more-forms\\src\\components\\HookCard.jsx",[],{"ruleId":"16","severity":1,"message":"17","line":39,"column":13,"nodeType":"18","messageId":"19","endLine":39,"endColumn":20},"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar"]